%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F34) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 240 57
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 240 57
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.3611 0.2118 0.0535 0.4046 0.6783 0.1088 0.1848 0.1099 0.9268 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.13699999 0.122 0.125 sc
q
26.223 51.054001 m
16.917999 49.929001 l
13.113 56.691002 l
9.3870001 49.886002 l
0.109 51.155998 l
5.7379999 43.662998 l
0 36.264999 l
9.3050003 37.389999 l
13.109 30.628 l
16.836 37.432999 l
26.113001 36.162998 l
20.483999 43.655998 l
26.223 51.054001 l
h
13.414 43.499001 m
24.902 36.921001 l
16.601999 38.027 l
13.414 43.499001 l
h
6.3439999 43.691002 m
12.676 43.691002 l
1.238 37.037998 l
6.3439999 43.691002 l
h
12.828 43.882 m
1.34 50.459999 l
9.6409998 49.355 l
12.828 43.882 l
h
13.121 43.432999 m
13.121 31.613001 l
9.7419996 37.894001 l
13.121 43.432999 l
h
16.511999 49.424999 m
13.121 43.886002 l
13.121 55.702 l
16.511999 49.424999 l
h
25.004 50.339001 m
19.895 43.691002 l
13.562 43.691002 l
25.004 50.339001 l
h
25.004 50.339001 m
W*
0 0 240 57 rc
-5 61.691002 m
31.223 61.691002 l
31.223 25.628 l
-5 25.628 l
h
-5 61.691002 m
f*
Q
q
18.922001 8.8780003 m
18.922001 5.0310001 16.84 3.187 12.602 3.187 c
8.3669996 3.187 6.2659998 5.0310001 6.2659998 8.8780003 c
6.2659998 17.389999 l
10.543 17.389999 l
10.543 9.8310003 l
10.543 8.4130001 10.543 6.6440001 12.621 6.6440001 c
14.645 6.6440001 14.645 8.4130001 14.645 9.8310003 c
14.645 17.389999 l
18.922001 17.389999 l
W*
0 0 240 57 rc
1.266 22.389999 m
23.922001 22.389999 l
23.922001 -1.813 l
1.266 -1.813 l
h
1.266 22.389999 m
f*
Q
q
21.792999 13.601 m
25.504 13.601 l
25.504 12.32 l
25.542999 12.32 l
26.261999 13.331 27.292999 13.855 28.827999 13.855 c
30.636999 13.855 32.289001 12.749 32.289001 10.437 c
32.289001 3.5150001 l
28.441 3.5150001 l
28.441 8.8039999 l
28.441 9.9680004 28.305 10.785 27.176001 10.785 c
26.516001 10.785 25.641001 10.452 25.641001 8.8430004 c
25.641001 3.5150001 l
21.792999 3.5150001 l
W*
0 0 240 57 rc
16.792999 18.855 m
37.289001 18.855 l
37.289001 -1.485 l
16.792999 -1.485 l
h
16.792999 18.855 m
f*
Q
q
35.242001 13.601 m
39.09 13.601 l
39.09 3.5150001 l
35.242001 3.5150001 l
35.242001 13.601 l
h
35.242001 17.389999 m
39.09 17.389999 l
39.09 14.687 l
35.242001 14.687 l
35.242001 17.389999 l
h
35.242001 17.389999 m
W*
0 0 240 57 rc
30.242001 22.389999 m
44.09 22.389999 l
44.09 -1.485 l
30.242001 -1.485 l
h
30.242001 22.389999 m
f*
Q
q
48.672001 3.5150001 m
44.125 3.5150001 l
40.82 13.601 l
44.882999 13.601 l
46.457001 7.46 l
46.495998 7.46 l
48.09 13.601 l
52.015999 13.601 l
W*
0 0 240 57 rc
35.82 18.601 m
57.015999 18.601 l
57.015999 -1.485 l
35.82 -1.485 l
h
35.82 18.601 m
f*
Q
q
60.585999 9.6949997 m
60.585999 10.628 59.887001 11.386 58.895 11.386 c
57.745998 11.386 57.085999 10.785 56.914001 9.6949997 c
60.585999 9.6949997 l
h
56.890999 7.6950002 m
56.987999 6.5500002 57.652 5.7340002 58.855 5.7340002 c
59.48 5.7340002 60.16 5.9640002 60.469002 6.4520001 c
64.066002 6.4520001 l
63.289001 4.2729998 61.167999 3.2650001 58.875 3.2650001 c
55.647999 3.2650001 53.219002 5.1669998 53.219002 8.5310001 c
53.219002 11.464 55.355 13.855 58.547001 13.855 c
62.550999 13.855 64.280998 11.62 64.280998 7.6950002 c
56.890999 7.6950002 l
h
56.890999 7.6950002 m
W*
0 0 240 57 rc
48.219002 18.855 m
69.280998 18.855 l
69.280998 -1.735 l
48.219002 -1.735 l
h
48.219002 18.855 m
f*
Q
q
66.667999 13.601 m
70.359001 13.601 l
70.359001 11.988 l
70.398003 11.988 l
71.019997 13.195 71.835999 13.855 73.237999 13.855 c
73.625 13.855 73.996002 13.796 74.366997 13.699 c
74.366997 10.3 l
73.976997 10.437 73.625 10.55 72.848 10.55 c
71.332001 10.55 70.515999 9.6599998 70.515999 7.4990001 c
70.515999 3.5150001 l
66.667999 3.5150001 l
W*
0 0 240 57 rc
61.667999 18.855 m
79.366997 18.855 l
79.366997 -1.485 l
61.667999 -1.485 l
h
61.667999 18.855 m
f*
Q
q
81.902 10.667 m
81.883003 10.999 81.710999 11.249 81.457001 11.425 c
81.223 11.62 80.910004 11.718 80.601997 11.718 c
80.058998 11.718 79.433998 11.601 79.433998 10.941 c
79.433998 10.648 79.667999 10.511 79.883003 10.417 c
80.523003 10.144 81.980003 10.066 83.265999 9.6359997 c
84.546997 9.2299995 85.676003 8.4720001 85.676003 6.8200002 c
85.676003 4.0229998 82.991997 3.2650001 80.542999 3.2650001 c
78.171997 3.2650001 75.566002 4.2179999 75.508003 6.8200002 c
79.183998 6.8200002 l
79.203003 6.4679999 79.355003 6.1789999 79.648003 5.9250002 c
79.844002 5.7490001 80.214996 5.6360002 80.68 5.6360002 c
81.183998 5.6360002 81.980003 5.8270001 81.980003 6.4130001 c
81.980003 6.9949999 81.652 7.171 79.862999 7.48 c
76.926003 7.9879999 75.741997 8.9169998 75.741997 10.648 c
75.741997 13.195 78.480003 13.855 80.503998 13.855 c
82.683998 13.855 85.305 13.253 85.402 10.667 c
W*
0 0 240 57 rc
70.508003 18.855 m
90.676003 18.855 l
90.676003 -1.735 l
70.508003 -1.735 l
h
70.508003 18.855 m
f*
Q
q
88.082001 13.601 m
91.933998 13.601 l
91.933998 3.5150001 l
88.082001 3.5150001 l
88.082001 13.601 l
h
88.085999 17.389999 m
91.933998 17.389999 l
91.933998 14.687 l
88.085999 14.687 l
88.085999 17.389999 l
h
88.085999 17.389999 m
W*
0 0 240 57 rc
83.082001 22.389999 m
96.933998 22.389999 l
96.933998 -1.485 l
83.082001 -1.485 l
h
83.082001 22.389999 m
f*
Q
q
99.530998 13.601 m
101.59 13.601 l
101.59 11.23 l
99.530998 11.23 l
99.530998 7.7140002 l
99.530998 6.7810001 99.746002 6.3740001 100.719 6.3740001 c
101.008 6.3740001 101.301 6.3940001 101.59 6.4289999 c
101.59 3.5150001 l
100.816 3.5150001 99.941002 3.402 99.121002 3.402 c
97.491997 3.402 95.683998 3.652 95.683998 6.4130001 c
95.683998 11.23 l
93.973 11.23 l
93.973 13.601 l
95.683998 13.601 l
95.683998 16.674999 l
99.530998 16.674999 l
W*
0 0 240 57 rc
88.973 21.674999 m
106.59 21.674999 l
106.59 -1.598 l
88.973 -1.598 l
h
88.973 21.674999 m
f*
Q
q
112.246 4.296 m
111.934 3.402 111.582 2.253 110.98 1.495 c
109.969 0.234 108.414 0.25299999 106.918 0.25299999 c
105.168 0.25299999 l
105.168 3.3239999 l
106.062 3.3239999 l
106.449 3.3239999 106.957 3.2850001 107.227 3.4170001 c
107.461 3.5350001 107.598 3.73 107.598 4.1789999 c
107.598 4.6630001 106.121 8.3739996 105.906 8.9560003 c
104.195 13.601 l
108.316 13.601 l
109.93 7.8119998 l
109.969 7.8119998 l
111.602 13.601 l
115.586 13.601 l
W*
0 0 240 57 rc
99.195 18.601 m
120.586 18.601 l
120.586 -4.7470164 l
99.195 -4.7470164 l
h
99.195 18.601 m
f*
Q
q
127.906 3.2650001 m
124.117 3.2650001 122.406 5.7690001 122.406 8.5699997 c
122.406 11.367 124.117 13.855 127.906 13.855 c
131.69901 13.855 133.41 11.367 133.41 8.5699997 c
133.41 5.7690001 131.69901 3.2650001 127.906 3.2650001 c
127.906 11.058 m
126.449 11.058 126.254 9.6359997 126.254 8.5699997 c
126.254 7.4990001 126.449 6.0619998 127.906 6.0619998 c
129.367 6.0619998 129.55901 7.4990001 129.55901 8.5699997 c
129.55901 9.6359997 129.367 11.058 127.906 11.058 c
W*
0 0 240 57 rc
117.406 18.855 m
138.41 18.855 l
138.41 -1.735 l
117.406 -1.735 l
h
117.406 18.855 m
f*
Q
q
136.496 11.23 m
134.922 11.23 l
134.922 13.605 l
136.496 13.605 l
136.457 14.593 136.55499 15.702 137.293 16.441 c
138.129 17.273001 139.10201 17.393999 140.65601 17.393999 c
141.23801 17.393999 141.80499 17.334999 142.38699 17.316 c
142.38699 14.671 l
142.078 14.71 141.76601 14.808 141.453 14.808 c
140.52 14.808 140.211 14.535 140.27 13.605 c
142.289 13.605 l
142.289 11.23 l
140.34399 11.23 l
140.34399 3.5150001 l
136.496 3.5150001 l
W*
0 0 240 57 rc
129.922 22.393999 m
147.38699 22.393999 l
147.38699 -1.485 l
129.922 -1.485 l
h
129.922 22.393999 m
f*
Q
q
154.242 6.8200002 m
156.75 6.8200002 l
157.645 6.8200002 158.422 7.0739999 158.422 8.1400003 c
158.422 8.9560003 157.93401 9.4060001 156.922 9.4060001 c
154.242 9.4060001 l
154.242 6.8200002 l
h
149.965 17.389999 m
157.56599 17.389999 l
161.21899 17.389999 162 15.331 162 13.913 c
162 12.515 161.31599 11.757 160.285 11.195 c
161.53101 10.765 162.69901 9.7729998 162.69901 7.7340002 c
162.69901 4.9559999 160.285 3.5150001 157.84 3.5150001 c
149.965 3.5150001 l
149.965 17.389999 l
h
154.242 11.988 m
156.496 11.988 l
157.39101 11.988 157.953 12.242 157.953 13.136 c
157.953 13.835 157.371 14.089 156.496 14.089 c
154.242 14.089 l
154.242 11.988 l
h
154.242 11.988 m
W*
0 0 240 57 rc
144.965 22.389999 m
167.69901 22.389999 l
167.69901 -1.485 l
144.965 -1.485 l
h
144.965 22.389999 m
f*
Q
q
165.086 13.601 m
168.78101 13.601 l
168.78101 11.988 l
168.82001 11.988 l
169.44099 13.195 170.258 13.855 171.65601 13.855 c
172.047 13.855 172.418 13.796 172.785 13.699 c
172.785 10.3 l
172.395 10.437 172.047 10.55 171.27 10.55 c
169.754 10.55 168.93401 9.6599998 168.93401 7.4990001 c
168.93401 3.5150001 l
165.086 3.5150001 l
W*
0 0 240 57 rc
160.086 18.855 m
177.785 18.855 l
177.785 -1.485 l
160.086 -1.485 l
h
160.086 18.855 m
f*
Q
q
174.57001 13.601 m
178.418 13.601 l
178.418 3.5150001 l
174.57001 3.5150001 l
174.57001 13.601 l
h
174.57001 17.389999 m
178.418 17.389999 l
178.418 14.687 l
174.57001 14.687 l
174.57001 17.389999 l
h
174.57001 17.389999 m
W*
0 0 240 57 rc
169.57001 22.389999 m
183.418 22.389999 l
183.418 -1.485 l
169.57001 -1.485 l
h
169.57001 22.389999 m
f*
Q
q
186.34801 6.585 m
187.76601 6.585 187.922 7.9489999 187.922 9.0740004 c
187.922 10.183 187.379 11.058 186.25 11.058 c
185.164 11.058 184.617 10.124 184.617 9.0539999 c
184.617 7.9099998 184.965 6.585 186.34801 6.585 c
191.67599 4.8200002 m
191.67599 2.816 191.14799 -0.001 186.42599 -0.001 c
184.035 -0.001 181.508 0.63999999 181.15601 3.3629999 c
184.965 3.3629999 l
185.004 3.2650001 185.10201 3.128 185.17999 3.0109999 c
185.414 2.6600001 185.82001 2.273 186.30901 2.273 c
187.55499 2.273 187.82401 3.7490001 187.82401 4.585 c
187.82401 5.5190001 l
187.785 5.5190001 l
187.164 4.6240001 186.23 4.1199999 185.086 4.1199999 c
182.10899 4.1199999 180.77 6.335 180.77 9.0380001 c
180.77 11.66 182.26601 13.855 185.14101 13.855 c
186.27 13.855 187.34 13.41 187.785 12.378 c
187.82401 12.378 l
187.82401 13.601 l
191.67599 13.601 l
W*
0 0 240 57 rc
175.77 18.855 m
196.67599 18.855 l
196.67599 -5.0009999 l
175.77 -5.0009999 l
h
175.77 18.855 m
f*
Q
q
194.41 17.389999 m
198.26199 17.389999 l
198.26199 12.515 l
198.30099 12.515 l
198.961 13.292 199.81599 13.855 201.44901 13.855 c
203.258 13.855 204.91 12.749 204.91 10.437 c
204.91 3.5150001 l
201.05901 3.5150001 l
201.05901 8.8000002 l
201.05901 9.9680004 200.92599 10.785 199.797 10.785 c
199.133 10.785 198.26199 10.452 198.26199 8.8389997 c
198.26199 3.5150001 l
194.41 3.5150001 l
W*
0 0 240 57 rc
189.41 22.389999 m
209.91 22.389999 l
209.91 -1.485 l
189.41 -1.485 l
h
189.41 22.389999 m
f*
Q
q
212.41 13.601 m
214.46899 13.601 l
214.46899 11.23 l
212.41 11.23 l
212.41 7.7140002 l
212.41 6.7810001 212.625 6.3740001 213.59801 6.3740001 c
213.88699 6.3740001 214.17999 6.3940001 214.46899 6.4289999 c
214.46899 3.5150001 l
213.69501 3.5150001 212.82001 3.402 212 3.402 c
210.367 3.402 208.562 3.652 208.562 6.4130001 c
208.562 11.23 l
206.85201 11.23 l
206.85201 13.601 l
208.562 13.601 l
208.562 16.674999 l
212.41 16.674999 l
W*
0 0 240 57 rc
201.85201 21.674999 m
219.46899 21.674999 l
219.46899 -1.598 l
201.85201 -1.598 l
h
201.85201 21.674999 m
f*
Q
q
221.547 3.2650001 m
217.754 3.2650001 216.043 5.7690001 216.043 8.5699997 c
216.043 11.367 217.754 13.855 221.547 13.855 c
225.336 13.855 227.047 11.367 227.047 8.5699997 c
227.047 5.7690001 225.336 3.2650001 221.547 3.2650001 c
221.547 11.058 m
220.09 11.058 219.895 9.6359997 219.895 8.5699997 c
219.895 7.4990001 220.09 6.0619998 221.547 6.0619998 c
223.004 6.0619998 223.19501 7.4990001 223.19501 8.5699997 c
223.19501 9.6359997 223.004 11.058 221.547 11.058 c
W*
0 0 240 57 rc
211.043 18.855 m
232.047 18.855 l
232.047 -1.735 l
211.043 -1.735 l
h
211.043 18.855 m
f*
Q
q
229.492 13.601 m
233.207 13.601 l
233.207 12.32 l
233.242 12.32 l
233.965 13.331 234.996 13.855 236.53101 13.855 c
238.336 13.855 239.98801 12.749 239.98801 10.437 c
239.98801 3.5150001 l
236.14101 3.5150001 l
236.14101 8.8039999 l
236.14101 9.9680004 236.004 10.785 234.879 10.785 c
234.215 10.785 233.34 10.452 233.34 8.8430004 c
233.34 3.5150001 l
229.492 3.5150001 l
W*
0 0 240 57 rc
224.492 18.855 m
244.98801 18.855 l
244.98801 -1.485 l
224.492 -1.485 l
h
224.492 18.855 m
f*
ep
end
