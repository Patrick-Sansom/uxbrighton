%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 512 512
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 512 512
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.3611 0.2118 0.0535 0.4046 0.6783 0.1088 0.1848 0.1099 0.9268 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 512 m
0 0 l
512 0 l
512 512 l
0 512 l
h
0 512 m
W*
0 0 512 512 rc
-5 517 m
517 517 l
517 -5 l
-5 -5 l
h
-5 517 m
f*
Q
1 1 1 sc
q
62.302216 106.09341 m
96.779587 106.09341 l
100.80415 106.09341 104.21393 106.3001 107.7244 107.44917 c
115.25846 110.06174 121.14185 117.37243 121.14185 127.08998 c
121.14185 135.44099 116.90914 142.64883 109.06625 144.94891 c
109.06625 145.15561 l
114.74245 148.0797 118.25098 153.82697 118.25098 161.03186 c
118.25098 168.97145 114.01924 175.02925 108.24043 177.63986 c
104.62636 179.31203 100.70346 179.83316 95.438713 179.83316 c
62.302216 179.83316 l
62.302216 171.78876 l
71.3853 171.78876 l
71.3853 114.23773 l
62.302216 114.23773 l
62.302216 106.09341 l
62.302216 106.09341 l
h
81.710503 148.81145 m
81.710503 171.26958 l
95.439682 171.26958 l
98.537727 171.26958 100.91064 170.85226 102.97568 169.80508 c
106.07276 168.03006 107.72537 164.37422 107.72537 160.09341 c
107.72537 153.4077 103.59626 148.81242 96.989677 148.81242 c
81.710503 148.81145 l
81.710503 148.81145 l
h
81.710503 114.657 m
81.710503 140.2459 l
98.019775 140.2459 l
105.65936 140.2459 110.61333 135.23431 110.61333 127.61308 c
110.61333 122.07545 107.93062 117.47626 103.69791 115.70125 c
101.7355 114.86468 99.257057 114.65994 97.194923 114.65994 c
81.710503 114.65994 l
81.710503 114.657 l
81.710503 114.657 l
h
81.710503 114.657 m
W*
0 0 512 512 rc
57.302216 184.83316 m
126.14185 184.83316 l
126.14185 101.09341 l
57.302216 101.09341 l
h
57.302216 184.83316 m
f*
Q
q
125.34454 106.09341 m
150.94504 106.09341 l
150.94504 113.92525 l
143.20284 113.92525 l
143.20284 127.92655 l
143.20284 138.26222 147.95155 149.64803 159.10161 149.64803 c
160.75229 149.64803 161.98958 149.33553 161.98958 149.33553 c
161.98958 159.36067 l
161.98958 159.36067 160.75133 159.57129 159.40851 159.57129 c
151.35747 159.57129 145.26691 153.51154 142.8911 145.78452 c
142.68585 145.78452 l
142.68585 145.78452 142.8911 147.35088 142.8911 149.43936 c
142.8911 152.78174 l
142.8911 157.06451 140.7244 158.94435 136.18286 158.94435 c
124.41512 158.94435 l
124.41512 151.11055 l
130.91908 151.11055 l
132.36354 151.11055 133.18938 150.37978 133.18938 148.81242 c
133.18938 113.92721 l
125.34357 113.92721 l
125.34357 106.09243 l
125.34454 106.09341 l
125.34454 106.09341 l
h
125.34454 106.09341 m
W*
0 0 512 512 rc
119.41512 164.57129 m
166.98958 164.57129 l
166.98958 101.09243 l
119.41512 101.09243 l
h
119.41512 164.57129 m
f*
Q
q
174.47858 169.48965 m
185.00612 169.48965 l
185.00612 179.83121 l
174.47858 179.83121 l
174.47858 169.48965 l
174.47858 169.48965 l
h
166.52821 106.09341 m
192.95551 106.09341 l
192.95551 113.92525 l
184.69632 113.92525 l
184.69632 158.94337 l
166.01219 158.94337 l
166.01219 151.1086 l
174.68285 151.1086 l
174.68285 113.92329 l
166.52724 113.92329 l
166.52724 106.09341 l
166.52821 106.09341 l
166.52821 106.09341 l
h
166.52821 106.09341 m
W*
0 0 512 512 rc
161.01219 184.83121 m
197.95551 184.83121 l
197.95551 101.09341 l
161.01219 101.09341 l
h
161.01219 184.83121 m
f*
Q
q
201.43738 96.27594 m
198.13214 88.542061 l
203.2933 85.932426 209.69464 84.155449 215.99141 84.155449 c
229.20555 84.155449 242.31319 90.841164 242.31319 108.2828 c
242.31319 149.01912 l
242.31319 150.37782 243.24162 151.1086 244.58734 151.1086 c
250.36713 151.1086 l
250.36713 158.94337 l
239.21901 158.94337 l
234.88271 158.94337 233.23204 156.95871 233.23204 153.61635 c
233.23204 152.25667 233.43729 151.52492 233.43729 151.52492 c
233.23204 151.52492 l
230.34311 157.58467 223.11789 160.19626 216.30316 160.19626 c
201.74911 160.19626 193.38634 148.91626 193.38634 133.7708 c
193.38634 118.52247 202.26416 106.72034 216.71558 106.72034 c
224.35516 106.72034 229.3101 110.06075 232.40718 115.28296 c
232.61243 115.28296 l
232.61243 115.28296 232.30359 113.61374 232.30359 111.94157 c
232.30359 107.76361 l
232.30359 96.89798 224.87119 92.721977 215.78616 92.721977 c
207.93843 92.723938 201.43738 96.27594 201.43738 96.27594 c
201.43738 96.27594 l
201.43738 96.27594 l
h
218.67509 115.49162 m
209.2793 115.49162 203.6031 123.01488 203.6031 133.97847 c
203.6031 144.73732 208.76619 151.42403 217.74472 151.42403 c
225.90129 151.42403 232.50787 147.45471 232.50787 133.66696 c
232.5069 119.88313 225.90129 115.49162 218.67509 115.49162 c
218.67509 115.49162 l
218.67509 115.49162 l
h
218.67509 115.49162 m
W*
0 0 512 512 rc
188.38634 165.19626 m
255.36713 165.19626 l
255.36713 79.155449 l
188.38634 79.155449 l
h
188.38634 165.19626 m
f*
Q
q
249.09886 106.09341 m
275.52036 106.09341 l
275.52036 113.92525 l
267.26599 113.92525 l
267.26599 130.84868 l
267.26599 142.1277 274.48929 150.90092 284.70993 150.90092 c
293.06885 150.90092 294.61786 145.05177 294.61786 137.63431 c
294.61786 106.09047 l
312.78693 106.09047 l
312.78693 113.92231 l
304.63425 113.92231 l
304.63425 139.93439 l
304.63425 153.4077 298.95514 160.19823 286.67331 160.19823 c
276.24744 160.19823 269.43658 153.20003 267.16434 148.08263 c
266.96008 148.08263 l
266.96008 148.08263 267.26697 149.96346 267.26697 152.47023 c
267.26697 179.83414 l
248.58382 179.83414 l
248.58382 172.00133 l
257.35709 172.00133 l
257.35709 113.92622 l
249.1008 113.92622 l
249.09886 106.09341 l
249.09886 106.09341 l
h
249.09886 106.09341 m
W*
0 0 512 512 rc
243.58382 184.83414 m
317.78693 184.83414 l
317.78693 101.09047 l
243.58382 101.09047 l
h
243.58382 184.83414 m
f*
Q
q
317.81448 125.41684 m
317.81448 107.76361 331.1293 105.67513 337.73782 105.67513 c
339.90549 105.67513 341.34995 105.8828 341.34995 105.8828 c
341.34995 114.33961 l
341.34995 114.33961 340.41956 114.23773 338.97415 114.23773 c
335.05124 114.23773 327.82312 115.59741 327.82312 126.35921 c
327.82312 151.10957 l
340.31308 151.10957 l
340.31308 158.94435 l
327.82312 158.94435 l
327.82312 173.46092 l
318.01587 173.46092 l
318.01587 158.94238 l
309.03348 158.94238 l
309.03348 151.10762 l
317.80966 151.10762 l
317.80966 125.41684 l
317.81448 125.41684 l
317.81448 125.41684 l
h
317.81448 125.41684 m
W*
0 0 512 512 rc
304.03348 178.46092 m
346.34995 178.46092 l
346.34995 100.67513 l
304.03348 100.67513 l
h
304.03348 178.46092 m
f*
Q
q
340.61417 132.62369 m
340.61417 116.53683 353.20386 104.84051 368.79379 104.84051 c
384.3847 104.84051 396.97922 116.53978 396.97922 132.62369 c
396.97922 148.6028 384.38568 160.19725 368.79379 160.19725 c
353.20386 160.19725 340.61417 148.6028 340.61417 132.62369 c
340.61417 132.62369 l
340.61417 132.62369 l
h
350.83289 132.62369 m
350.83289 143.58827 358.88586 151.42403 368.79379 151.42403 c
378.59912 151.42403 386.75568 143.58925 386.75568 132.62369 c
386.75568 121.55235 378.60007 113.61472 368.79379 113.61472 c
358.88876 113.61569 350.83289 121.55235 350.83289 132.62369 c
350.83289 132.62369 l
350.83289 132.62369 l
h
350.83289 132.62369 m
W*
0 0 512 512 rc
335.61417 165.19725 m
401.97922 165.19725 l
401.97922 99.840508 l
335.61417 99.840508 l
h
335.61417 165.19725 m
f*
Q
q
398.75479 106.09341 m
425.185 106.09341 l
425.185 113.92525 l
416.92386 113.92525 l
416.92386 130.63806 l
416.92386 141.18729 423.83929 150.9019 434.37265 150.9019 c
442.73059 150.9019 444.1799 145.05275 444.1799 137.63528 c
444.1799 106.09145 l
462.44965 106.09145 l
462.44965 113.92329 l
454.19141 113.92329 l
454.19141 139.93536 l
454.19141 153.40868 448.82211 160.1992 436.84915 160.1992 c
423.63403 160.1992 417.54251 150.17406 416.51242 147.35284 c
416.30618 147.35284 l
416.30618 147.35284 416.61502 148.71056 416.61502 150.38173 c
416.61502 153.09619 l
416.61502 156.96165 414.54807 158.9463 410.00845 158.9463 c
398.24072 158.9463 l
398.24072 151.11153 l
404.64108 151.11153 l
406.08749 151.11153 406.9162 150.38075 406.9162 148.81439 c
406.9162 113.92818 l
398.75867 113.92818 l
398.75867 106.09634 l
398.75479 106.09634 l
398.75479 106.09341 l
398.75479 106.09341 l
h
398.75479 106.09341 m
W*
0 0 512 512 rc
393.24072 165.1992 m
467.44965 165.1992 l
467.44965 101.09145 l
393.24072 101.09145 l
h
393.24072 165.1992 m
f*
Q
q
255.22516 231.88889 m
348.36929 231.88889 l
348.36929 267.76874 l
331.21613 267.76874 l
349.75565 293.71323 l
353.35666 298.96072 355.28934 303.09778 355.84152 303.09778 c
356.39664 303.09778 l
356.39664 303.09778 358.88446 298.6853 362.75861 293.71323 c
382.68448 267.76874 l
364.97324 267.76874 l
364.97324 231.88889 l
462.67883 231.88889 l
462.67883 267.76874 l
441.82187 267.76874 l
394.22763 329.30594 l
442.65015 393.33652 l
463.22223 393.33652 l
463.22223 429.22223 l
369.94882 429.22223 l
369.94882 393.33945 l
386.54984 393.33945 l
368.28345 368.49954 l
364.4093 363.25497 362.20053 359.11206 362.20053 359.39334 c
361.64835 359.39334 l
361.64835 359.39334 359.15759 363.53625 355.28638 368.49954 c
336.47369 393.33945 l
353.62686 393.33945 l
353.62686 429.22223 l
260.72357 429.22223 l
260.72357 393.33945 l
277.32162 393.33945 l
323.8056 332.61969 l
275.10699 267.76581 l
255.22223 267.76581 l
255.22223 231.88889 l
255.22516 231.88889 l
255.22516 231.88889 l
h
255.22516 231.88889 m
W*
0 0 512 512 rc
250.22223 434.22223 m
468.22223 434.22223 l
468.22223 226.88889 l
250.22223 226.88889 l
h
250.22223 434.22223 m
f*
Q
q
154.78365 228.33333 m
180.74141 228.33333 206.98064 236.89928 222.16713 255.68567 c
232.38431 268.39377 238.46184 287.47351 238.46184 307.08423 c
238.46184 393.29514 l
262.33334 393.29514 l
262.33334 429.22223 l
164.97736 429.22223 l
164.97736 393.29514 l
183.52951 393.29514 l
183.52951 307.07837 l
183.52951 297.96973 182.13986 290.78256 179.12602 284.97415 c
174.02477 275.578 165.68098 271.1601 155.00938 271.1601 c
143.6459 271.1601 134.60435 276.41406 130.20087 285.26163 c
127.64437 290.50974 126.02604 298.24548 126.02604 307.0813 c
126.02604 393.29514 l
144.57527 393.29514 l
144.57527 429.22223 l
49 429.22223 l
49 393.29514 l
71.099579 393.29514 l
71.099579 307.0813 l
71.105446 286.36465 76.071838 268.12094 87.675735 254.86134 c
102.03255 238.28098 126.61239 228.33333 154.78365 228.33333 c
154.78365 228.33333 l
h
154.78365 228.33333 m
W*
0 0 512 512 rc
44 434.22223 m
267.33334 434.22223 l
267.33334 223.33333 l
44 223.33333 l
h
44 434.22223 m
f*
ep
end
