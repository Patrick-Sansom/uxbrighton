%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 473 83
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 473 83
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.3611 0.2118 0.0535 0.4046 0.6783 0.1088 0.1848 0.1099 0.9268 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.78823531 0 0.22745098 sc
q
122.76151 19.090059 m
152.93547 19.090059 l
156.45769 19.090059 159.44186 19.268839 162.51416 20.262718 c
169.10783 22.522461 174.25685 28.84584 174.25685 37.25103 c
174.25685 44.474239 170.55247 50.708652 163.68852 52.698109 c
163.68852 52.876888 l
168.65622 55.406071 171.72682 60.377163 171.72682 66.609032 c
171.72682 73.476379 168.02328 78.716064 162.96577 80.974113 c
159.80281 82.420448 156.36957 82.871208 151.76196 82.871208 c
122.76151 82.871208 l
122.76151 75.913208 l
130.71086 75.913208 l
130.71086 26.134489 l
122.76151 26.134489 l
122.76151 19.090059 l
122.76151 19.090059 l
h
139.74728 56.039001 m
139.74728 75.464134 l
151.7628 75.464134 l
154.47415 75.464134 156.55089 75.103188 158.35817 74.197426 c
161.06868 72.662125 162.51501 69.500015 162.51501 65.797325 c
162.51501 60.014519 158.90129 56.039848 153.11932 56.039848 c
139.74728 56.039001 l
139.74728 56.039001 l
h
139.74728 26.497133 m
139.74728 48.630234 l
154.02086 48.630234 l
160.70688 48.630234 165.0425 44.29546 165.0425 37.703487 c
165.0425 32.913715 162.69464 28.935654 158.99025 27.400351 c
157.27278 26.67676 155.1037 26.499674 153.29897 26.499674 c
139.74728 26.499674 l
139.74728 26.497133 l
139.74728 26.497133 l
h
139.74728 26.497133 m
W*
0 0 473 83 rc
117.76151 87.871208 m
179.25685 87.871208 l
179.25685 14.090059 l
117.76151 14.090059 l
h
117.76151 87.871208 m
f*
Q
q
177.93497 19.090059 m
200.34006 19.090059 l
200.34006 25.864201 l
193.56422 25.864201 l
193.56422 37.974621 l
193.56422 46.914455 197.72021 56.762592 207.47853 56.762592 c
208.92317 56.762592 210.00603 56.492306 210.00603 56.492306 c
210.00603 65.163544 l
210.00603 65.163544 208.92233 65.345711 207.74713 65.345711 c
200.701 65.345711 195.37065 60.104332 193.2914 53.420853 c
193.11177 53.420853 l
193.11177 53.420853 193.2914 54.775681 193.2914 56.582119 c
193.2914 59.473095 l
193.2914 63.177479 191.39514 64.803444 187.42047 64.803444 c
177.12157 64.803444 l
177.12157 58.027607 l
182.81371 58.027607 l
184.07788 58.027607 184.80063 57.395523 184.80063 56.039848 c
184.80063 25.865896 l
177.93413 25.865896 l
177.93413 19.089212 l
177.93497 19.090059 l
177.93497 19.090059 l
h
177.93497 19.090059 m
W*
0 0 473 83 rc
172.12157 70.345711 m
215.00603 70.345711 l
215.00603 14.089212 l
172.12157 14.089212 l
h
172.12157 70.345711 m
f*
Q
q
220.93616 73.924599 m
230.14967 73.924599 l
230.14967 82.869514 l
220.93616 82.869514 l
220.93616 73.924599 l
220.93616 73.924599 l
h
213.97815 19.090059 m
237.10683 19.090059 l
237.10683 25.864201 l
229.87854 25.864201 l
229.87854 64.802597 l
213.52655 64.802597 l
213.52655 58.025913 l
221.11494 58.025913 l
221.11494 25.862507 l
213.97731 25.862507 l
213.97731 19.090059 l
213.97815 19.090059 l
213.97815 19.090059 l
h
213.97815 19.090059 m
W*
0 0 473 83 rc
208.52655 87.869514 m
242.10683 87.869514 l
242.10683 14.090059 l
208.52655 14.090059 l
h
208.52655 87.869514 m
f*
Q
q
244.53 10.598446 m
241.63733 3.9090338 l
246.15427 1.6518338 251.75659 0.1148365 257.26743 0.1148365 c
268.83218 0.1148365 280.30374 5.8976407 280.30374 20.983768 c
280.30374 56.218628 l
280.30374 57.393829 281.1163 58.025913 282.29404 58.025913 c
287.35242 58.025913 l
287.35242 64.802597 l
277.59576 64.802597 l
273.80072 64.802597 272.35608 63.085972 272.35608 60.194992 c
272.35608 59.018944 272.53571 58.386013 272.53571 58.386013 c
272.35608 58.386013 l
269.82776 63.627396 263.50436 65.886292 257.54025 65.886292 c
244.80283 65.886292 237.48387 56.129662 237.48387 43.029598 c
237.48387 29.840569 245.25359 19.63233 257.90118 19.63233 c
264.58722 19.63233 268.92368 22.521614 271.63419 27.038555 c
271.81381 27.038555 l
271.81381 27.038555 271.54352 25.594761 271.54352 24.148424 c
271.54352 20.534702 l
271.54352 11.136479 265.03882 7.5244513 257.0878 7.5244513 c
250.2196 7.5261459 244.53 10.598446 244.53 10.598446 c
244.53 10.598446 l
244.53 10.598446 l
h
259.61612 27.21903 m
251.39311 27.21903 246.4254 33.726273 246.4254 43.209225 c
246.4254 52.515091 250.94405 58.29874 258.80188 58.29874 c
265.94037 58.29874 271.72232 54.865494 271.72232 42.939785 c
271.72147 31.017464 265.94037 27.21903 259.61612 27.21903 c
259.61612 27.21903 l
259.61612 27.21903 l
h
259.61612 27.21903 m
W*
0 0 473 83 rc
232.48387 70.886292 m
292.35242 70.886292 l
292.35242 -4.8851633 l
232.48387 -4.8851633 l
h
232.48387 70.886292 m
f*
Q
q
286.24243 19.090059 m
309.36603 19.090059 l
309.36603 25.864201 l
302.14197 25.864201 l
302.14197 40.50211 l
302.14197 50.257889 308.46365 57.846287 317.40857 57.846287 c
324.72415 57.846287 326.07983 52.787071 326.07983 46.371338 c
326.07983 19.087517 l
341.98105 19.087517 l
341.98105 25.86166 l
334.84595 25.86166 l
334.84595 48.36079 l
334.84595 60.014519 329.8757 65.887985 319.12689 65.887985 c
310.00235 65.887985 304.04163 59.834892 302.05301 55.408611 c
301.87424 55.408611 l
301.87424 55.408611 302.14282 57.035423 302.14282 59.203655 c
302.14282 82.872055 l
285.79169 82.872055 l
285.79169 76.097069 l
293.46988 76.097069 l
293.46988 25.865049 l
286.24414 25.865049 l
286.24243 19.090059 l
286.24243 19.090059 l
h
286.24243 19.090059 m
W*
0 0 473 83 rc
280.79169 87.872055 m
346.98105 87.872055 l
346.98105 14.087518 l
280.79169 14.087518 l
h
280.79169 87.872055 m
f*
Q
q
346.38107 35.803844 m
346.38107 20.534702 358.03394 18.728264 363.8176 18.728264 c
365.71469 18.728264 366.97885 18.90789 366.97885 18.90789 c
366.97885 26.222609 l
366.97885 26.222609 366.16461 26.134489 364.8996 26.134489 c
361.46634 26.134489 355.14041 27.310537 355.14041 36.618946 c
355.14041 58.02676 l
366.07141 58.02676 l
366.07141 64.803444 l
355.14041 64.803444 l
355.14041 77.359543 l
346.55731 77.359543 l
346.55731 64.80175 l
338.69608 64.80175 l
338.69608 58.025066 l
346.37683 58.025066 l
346.37683 35.803844 l
346.38107 35.803844 l
346.38107 35.803844 l
h
346.38107 35.803844 m
W*
0 0 473 83 rc
333.69608 82.359543 m
371.97885 82.359543 l
371.97885 13.728264 l
333.69608 13.728264 l
h
333.69608 82.359543 m
f*
Q
q
366.33493 42.037411 m
366.33493 28.123096 377.35318 18.006367 390.99719 18.006367 c
404.64209 18.006367 415.66455 28.125637 415.66455 42.037411 c
415.66455 55.858524 404.64291 65.887138 390.99719 65.887138 c
377.35318 65.887138 366.33493 55.858524 366.33493 42.037411 c
366.33493 42.037411 l
366.33493 42.037411 l
h
375.27814 42.037411 m
375.27814 51.52121 382.32596 58.29874 390.99719 58.29874 c
399.57861 58.29874 406.7171 51.522057 406.7171 42.037411 c
406.7171 32.461258 399.57947 25.595608 390.99719 25.595608 c
382.32849 25.596455 375.27814 32.461258 375.27814 42.037411 c
375.27814 42.037411 l
375.27814 42.037411 l
h
375.27814 42.037411 m
W*
0 0 473 83 rc
361.33493 70.887138 m
420.66455 70.887138 l
420.66455 13.006366 l
361.33493 13.006366 l
h
361.33493 70.887138 m
f*
Q
q
417.21851 19.090059 m
440.34973 19.090059 l
440.34973 25.864201 l
433.11975 25.864201 l
433.11975 40.319939 l
433.11975 49.444485 439.172 57.847134 448.39056 57.847134 c
455.70529 57.847134 456.97369 52.787922 456.97369 46.372185 c
456.97369 19.088366 l
472.96304 19.088366 l
472.96304 25.862507 l
465.7356 25.862507 l
465.7356 48.361641 l
465.7356 60.015366 461.0365 65.888832 450.55795 65.888832 c
438.99234 65.888832 433.66116 57.21759 432.75964 54.777374 c
432.57916 54.777374 l
432.57916 54.777374 432.84946 55.951729 432.84946 57.397217 c
432.84946 59.745079 l
432.84946 63.088512 431.04047 64.805138 427.0675 64.805138 c
416.76859 64.805138 l
416.76859 58.028454 l
422.37009 58.028454 l
423.63593 58.028454 424.36124 57.39637 424.36124 56.041542 c
424.36124 25.866743 l
417.22189 25.866743 l
417.22189 19.092602 l
417.21851 19.092602 l
417.21851 19.090059 l
417.21851 19.090059 l
h
417.21851 19.090059 m
W*
0 0 473 83 rc
411.76859 70.888832 m
477.96304 70.888832 l
477.96304 14.088365 l
411.76859 14.088365 l
h
411.76859 70.888832 m
f*
Q
0.062745102 0.54509807 0.75686276 sc
q
6.7682109 40.87746 m
6.7682109 34.892155 8.2035322 29.62027 11.558829 25.787098 c
15.708892 20.996479 22.817717 18.121599 30.961937 18.121599 c
38.467297 18.121599 46.054844 20.597401 50.444691 26.025188 c
53.398369 29.697374 55.156513 35.210739 55.156513 40.876614 c
55.156513 65.791389 l
61.545135 65.791389 l
61.545135 76.173325 l
33.911381 76.173325 l
33.911381 65.791389 l
39.27562 65.791389 l
39.27562 40.87746 l
39.27562 38.247452 38.873154 36.168182 38.002132 34.490536 c
36.526985 31.774948 34.113884 30.498919 31.028873 30.498919 c
27.743055 30.498919 25.129143 32.016426 23.856503 34.57357 c
23.116812 36.090233 22.649103 38.326248 22.649103 40.878311 c
22.649103 65.791389 l
28.012495 65.791389 l
28.012495 76.173325 l
0.37789458 76.173325 l
0.37789458 65.791389 l
6.7673635 65.791389 l
6.7673635 40.878311 l
6.7682109 40.878311 l
6.7682109 40.87746 l
6.7682109 40.87746 l
h
6.7682109 40.87746 m
W*
0 0 473 83 rc
-4.6221056 81.173325 m
66.545135 81.173325 l
66.545135 13.121598 l
-4.6221056 13.121598 l
h
-4.6221056 81.173325 m
f*
Q
q
59.810715 19.079044 m
86.69207 19.079044 l
86.69207 29.460978 l
81.742157 29.460978 l
87.091995 36.967186 l
88.132477 38.484695 88.689995 39.681927 88.848442 39.681927 c
89.008583 39.681927 l
89.008583 39.681927 89.727089 38.404202 90.844673 36.967186 c
96.594437 29.460978 l
91.483536 29.460978 l
91.483536 19.079044 l
119.68159 19.079044 l
119.68159 29.460978 l
113.66239 29.460978 l
99.926857 47.264389 l
113.90048 65.789696 l
119.83834 65.789696 l
119.83834 76.173325 l
92.918861 76.173325 l
92.918861 65.791389 l
97.710327 65.791389 l
92.438438 58.604618 l
91.320007 57.087955 90.682838 55.889027 90.682838 55.971214 c
90.523552 55.971214 l
90.523552 55.971214 89.803345 57.169296 88.687454 58.604618 c
83.257973 65.791389 l
88.207886 65.791389 l
88.207886 76.173325 l
61.396858 76.173325 l
61.396858 65.791389 l
66.18663 65.791389 l
79.601036 48.224377 l
65.546921 29.460978 l
59.808174 29.460978 l
59.810715 19.079044 l
59.810715 19.079044 l
h
59.810715 19.079044 m
W*
0 0 473 83 rc
54.808174 81.173325 m
124.83834 81.173325 l
124.83834 14.079044 l
54.808174 14.079044 l
h
54.808174 81.173325 m
f*
ep
end
